// Code generated by entc, DO NOT EDIT.

package groceryitem

import (
	"fmt"
	"time"

	"github.com/facebookincubator/ent"
	"github.com/jaredallard/grocerylistsbot/ent/schema"
)

const (
	// Label holds the string label denoting the groceryitem type in the database.
	Label = "grocery_item"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreatedAt holds the string denoting the created_at vertex property in the database.
	FieldCreatedAt = "created_at"
	// FieldModifiedAt holds the string denoting the modified_at vertex property in the database.
	FieldModifiedAt = "modified_at"
	// FieldDeletedAt holds the string denoting the deleted_at vertex property in the database.
	FieldDeletedAt = "deleted_at"
	// FieldName holds the string denoting the name vertex property in the database.
	FieldName = "name"
	// FieldStatus holds the string denoting the status vertex property in the database.
	FieldStatus = "status"
	// FieldPrice holds the string denoting the price vertex property in the database.
	FieldPrice = "price"

	// Table holds the table name of the groceryitem in the database.
	Table = "grocery_items"
	// GrocerylistTable is the table the holds the grocerylist relation/edge.
	GrocerylistTable = "grocery_items"
	// GrocerylistInverseTable is the table name for the GroceryList entity.
	// It exists in this package in order to avoid circular dependency with the "grocerylist" package.
	GrocerylistInverseTable = "grocery_lists"
	// GrocerylistColumn is the table column denoting the grocerylist relation/edge.
	GrocerylistColumn = "grocery_item_grocerylist"
)

// Columns holds all SQL columns for groceryitem fields.
var Columns = []string{
	FieldID,
	FieldCreatedAt,
	FieldModifiedAt,
	FieldDeletedAt,
	FieldName,
	FieldStatus,
	FieldPrice,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the GroceryItem type.
var ForeignKeys = []string{
	"grocery_item_grocerylist",
}

var (
	mixin       = schema.GroceryItem{}.Mixin()
	mixinFields = [...][]ent.Field{
		mixin[0].Fields(),
	}
	fields = schema.GroceryItem{}.Fields()

	// descCreatedAt is the schema descriptor for created_at field.
	descCreatedAt = mixinFields[0][0].Descriptor()
	// DefaultCreatedAt holds the default value on creation for the created_at field.
	DefaultCreatedAt = descCreatedAt.Default.(func() time.Time)

	// descModifiedAt is the schema descriptor for modified_at field.
	descModifiedAt = mixinFields[0][1].Descriptor()
	// DefaultModifiedAt holds the default value on creation for the modified_at field.
	DefaultModifiedAt = descModifiedAt.Default.(func() time.Time)
)

// Status defines the type for the status enum field.
type Status string

// StatusUnpurchased is the default Status.
const DefaultStatus = StatusUnpurchased

// Status values.
const (
	StatusPurchased   Status = "purchased"
	StatusUnpurchased Status = "unpurchased"
)

func (s Status) String() string {
	return string(s)
}

// StatusValidator is a validator for the "s" field enum values. It is called by the builders before save.
func StatusValidator(s Status) error {
	switch s {
	case StatusPurchased, StatusUnpurchased:
		return nil
	default:
		return fmt.Errorf("groceryitem: invalid enum value for status field: %q", s)
	}
}
